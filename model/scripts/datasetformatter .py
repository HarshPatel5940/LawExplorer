# -*- coding: utf-8 -*-
"""DataSetFormatter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CnYniY8zjOJRXgRfCqYE0lD4ct7YcFMO
"""

import json
from google.colab import files

# Define the function to generate the prompt
def generate_prompt(example):
    if 'input' in example and example["input"]:
        return (
            "Below is an instruction that describes a task, paired with an input that provides further context. "
            "Write a response that appropriately completes the request.\n\n"
            f"### Instruction:\n{example['instruction']}\n\n### Input:\n{example['input']}\n\n### Response:"
        )
    return (
        "Below is an instruction that describes a task. "
        "Write a response that appropriately completes the request.\n\n"
        f"### Instruction:\n{example['instruction']}\n\n### Response:"
    )

# Upload the JSON file
uploaded = files.upload()
print("File uploaded successfully.")

# Load the data from the uploaded file
data_file_path = list(uploaded.keys())[0]  # Get the name of the uploaded file
print(f"Processing file: {data_file_path}")

# Read the JSONL file
data = []
with open(data_file_path, 'r') as file:
    for line in file:
        line = line.rstrip(',\n')  # remove trailing comma and newline
        data.append(json.loads(line))  # Load each line as a separate JSON object

print(f"Loaded {len(data)} entries from the file.")

# Generate prompts for all data
prompts = [generate_prompt(d) for d in data]

# Write the prompts and corresponding outputs to a new JSONL file
try:
    with open('processed_data.jsonl', 'w') as outfile:
        for d, prompt in zip(data, prompts):
            d["prompt"] = prompt  # add the generated prompt to the original dict
            json.dump(d, outfile)  # Write each dictionary as a line in the JSONL file
            outfile.write('\n')
    print("Successfully wrote the processed data to 'processed_data.jsonl'.")
except Exception as e:
    print(f"Failed to write data to the file: {e}")

# Download the new file
files.download('processed_data.jsonl')
print("Downloaded 'processed_data.jsonl'.")